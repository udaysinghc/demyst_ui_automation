pipeline {
    agent any

    triggers {
        // Run every day at 2 AM
        cron('0 2 * * *')
    }

    tools {
        maven "maven"
    }

    parameters {
        string(name: 'CUCUMBER_TAGS', defaultValue: '', description: 'Cucumber tags for test execution')
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: 'master']],
                          userRemoteConfigs: [[url: 'https://github.com/udaysinghc/demyst_ui_automation.git']]])
            }
        }

        stage('Build and Run Tests') {
            steps {
                script {
                    catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE') {
                        bat "mvn clean install -Dcucumber.filter.tags=${params.CUCUMBER_TAGS}"
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                def reportPath = '**/target/cucumber/cucumber.json' // Adjust if needed
                if (fileExists('target/cucumber/cucumber.json')) {
                    echo "Cucumber JSON report found. Generating reports..."
                    cucumberReports(
                        buildStatus: 'UNCHANGED',
                        customCssFiles: '',
                        customJsFiles: '',
                        failedFeaturesNumber: -1,
                        failedScenariosNumber: -1,
                        failedStepsNumber: -1,
                        fileIncludePattern: reportPath,
                        pendingStepsNumber: -1,
                        skippedStepsNumber: -1,
                        sortingMethod: 'ALPHABETICAL',
                        undefinedStepsNumber: -1
                    )
                } else {
                    echo "Cucumber JSON report not found! Skipping report generation."
                }
            }
        }
    }
}

// Define the function to publish Cucumber reports
def cucumberReports(Map options) {
    step([$class: 'CucumberReportPublisher',
        buildStatus: options.buildStatus,
        customCssFiles: options.customCssFiles,
        customJsFiles: options.customJsFiles,
        failedFeaturesNumber: options.failedFeaturesNumber,
        failedScenariosNumber: options.failedScenariosNumber,
        failedStepsNumber: options.failedStepsNumber,
        fileIncludePattern: options.fileIncludePattern,
        pendingStepsNumber: options.pendingStepsNumber,
        skippedStepsNumber: options.skippedStepsNumber,
        sortingMethod: options.sortingMethod,
        undefinedStepsNumber: options.undefinedStepsNumber
    ])
}
